{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let TimeService = /*#__PURE__*/(() => {\n  class TimeService {\n    //private timeRegistration: TimeRegistration;\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.registrationUrl = 'api/TimeRegistrations';\n      this.getSumUrl = 'api/TimeRegistrations/GetTimeSum';\n    }\n\n    getUserId(userName) {\n      return this.http.get('api/User/GetUserId');\n    }\n\n    newRegistration(timeRegistration) {\n      let ls = localStorage.getItem('registrations');\n\n      if (ls == '[]' || ls == null) {\n        this.myRegistrations = [\n          /*{ registrationId: 1, userId: 2, projectName: 'ABC Kidgarden Construction', comment: '', hours: 7, registrationTime: new Date('2021 02 01 16 00 00') },\r\n          { registrationId: 2, userId: 2, projectName: 'ABC Kidgarden Construction', comment: '', hours: 7, registrationTime: new Date('2021 02 02 16 00 00') }*/\n        ];\n        timeRegistration.registrationId = 3;\n        this.myRegistrations.push(timeRegistration);\n      } else {\n        this.myRegistrations = JSON.parse(ls);\n        timeRegistration.registrationId = this.myRegistrations[this.myRegistrations.length - 1].registrationId + 1;\n        this.myRegistrations.push(timeRegistration);\n      }\n\n      return localStorage.setItem('registrations', JSON.stringify(this.myRegistrations));\n    }\n    /*searchMyRegistrations(conditions: string): Observable<ListGroup[]> {\r\n      alert(conditions);\r\n      //let s = conditions.split('/');\r\n      //this.searchCondition = { projectName: s[0], userName: s[1], date: new Date(s[2]) };\r\n      return this.http.get<ListGroup[]>('api/TimeRegistrations/GetSearchRegistrations' + '/' + conditions);\r\n    }*/\n\n\n    searchMyRegistrations(conditions) {\n      return this.http.get('api/TimeRegistrations/GetSearchRegistrations' + '/' + conditions);\n    } //get hours sum\n\n\n    getHourSum() {\n      return this.http.get(this.getSumUrl);\n    } //delete a registration from the database with http delete\n\n\n    deleteRegistration(id) {\n      this.myRegistrations = JSON.parse(localStorage.getItem('registrations'));\n\n      for (let i = 0; i < this.myRegistrations.length; i++) {\n        if (this.myRegistrations[i]['registrationId'] == id) {\n          this.myRegistrations.splice(i, 1);\n        }\n      }\n\n      return localStorage.setItem('registrations', JSON.stringify(this.myRegistrations));\n    }\n\n  }\n\n  TimeService.ɵfac = function TimeService_Factory(t) {\n    return new (t || TimeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  TimeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TimeService,\n    factory: TimeService.ɵfac,\n    providedIn: 'root'\n  });\n  return TimeService;\n})();","map":null,"metadata":{},"sourceType":"module"}