{"ast":null,"code":"import { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { UserRole } from '../role';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '../user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authService) {\n      this.router = router;\n      this.authService = authService;\n      this.userData = new User();\n      this.userDataSubscription = this.authService.userData.asObservable().subscribe(data => {\n        this.userData = data;\n      });\n    }\n\n    canActivate(next, state) {\n      if (this.userData.role == UserRole.User) {\n        return true;\n      }\n\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      }); //this.router.parseUrl('login?returnUrl=' + state.url); //this works together with UrlTree\n\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}